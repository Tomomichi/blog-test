{"pageProps":{"entry":{"title":"Herokuの無料プランで月間100万PVをさばく（さばかない）話","slug":"2018/02/04/170844","excerpt":"![f:id:o_tomomichi:20180204152944p:plain](https://cdn-ak.f.st-hatena.com/images/fotolife/o/o_tomomichi/20180204/20180204152944.png \"f:id:o_tomomichi:20180204152944p:plain\")\n\n「Heroku Meetup #19 Heroku Trust!」でLTさせてもらってきました！\n\n[herokujp.doorkeeper.jp](https://herokujp.doorkeeper.jp/events/69249)\n\nせっかくなので、LTのスライドを一部修正して掲載しておきます。\n\nHeroku Meetupはずっと行きたかったけど今まで都合がつかず、初参加できてよかったです。\n\nピザごちそうさまでした🍕","content":"![f:id:o_tomomichi:20180204152944p:plain](https://cdn-ak.f.st-hatena.com/images/fotolife/o/o_tomomichi/20180204/20180204152944.png \"f:id:o_tomomichi:20180204152944p:plain\")\n\n「Heroku Meetup #19 Heroku Trust!」でLTさせてもらってきました！\n\n[herokujp.doorkeeper.jp](https://herokujp.doorkeeper.jp/events/69249)\n\nせっかくなので、LTのスライドを一部修正して掲載しておきます。\n\nHeroku Meetupはずっと行きたかったけど今まで都合がつかず、初参加できてよかったです。\n\nピザごちそうさまでした🍕LT内容\n----\n\nというわけで発表したスライドはこちら。\n\n[https://speakerdeck.com/tomomichi/herokufalsewu-liao-purandeyue-jian-100mo-pvwosabaku-sabakanai-hua](https://speakerdeck.com/tomomichi/herokufalsewu-liao-purandeyue-jian-100mo-pvwosabaku-sabakanai-hua)\n\n3行で要約\n-----\n\n*   それなりにアクセスが多いサイトでも、場合によってはHerokuのFreeDynoだけでさばけるよ\n*   Herokuは更新系に集中して、アクセスが多い閲覧系のコンテンツはGoogleCloudStorage(GCS)とかS3に置いちゃえばいいんだよ\n*   最近だとFastlyとか使うのがいいらしいけど、GCS/S3も安くて手軽にできるからおすすめだよ\n\n補足とか言い訳とか\n---------\n\nちょうど発表の数日前に、似た内容の話がはてぶでバズってました。\n\n[note.mu](https://note.mu/konpyu/n/nb424a9a2ea8a)\n\nまたさらに前に話題になった[dev.to](https://dev.to/)もHeroku/Railsであの爆速を実現してて、その速さのコアな部分はFastlyによるCDN配信だったと理解しています。\n\n今回発表した内容も考え方はほぼ同じなんですが、Fastlyとかを使うんじゃなくてGCS使ってるところが違う点です。\n\nまたメリット/デメリットの比較に関して、今回は配信速度の追求よりも、大量のアクセスをちゃんとさばくというところに重点を置いているため、その点もご了承ください。\n\n個人的にはdev.toの爆速っぷりに驚いた一人なので、今後Fastly（もしくは類似サービス）を使うのはもっと主流になっていくんじゃないかと思っています。\n\nただ現時点でまだCDNでの動的コンテンツキャッシュをよく把握できておらず、自分の力量を考えると本番で試すのは怖いなーという感じです。\n\nあと金額的にもFastlyは多少高いのかなーと思っていて、個人のWebサービスなんかで使うにはまだハードルが高いという印象です。\n\n※そもそもFastly使ったことないので、違うよっていうご意見あればぜひ教えてほしいです。\n\nその点GCS方式は、ベストプラクティスではないかもしれないけど、わたし程度のエンジニアレベルで3年運用してて、お安くてトラブルもなく、今のところ超快適です。\n\nなので少なくとも現時点で、お手軽に試す分にはおすすめできるんじゃないかなーという話でした。\n\nちなみに、LTのあと懇親会で色んな方に話しかけてもらったのですが、ちゃんとした開発会社さんからS3で似た仕組みを運用してるよ、という話を聞きました。\n\n4年前に試行錯誤してこのやり方にたどり着いたのですが、まぁ間違ってなかったんだなーと思えてうれしい限りです。\n\nまとめというか、余談\n----------\n\nせっかくLTまでしたんですが、THE TOURNAMENTは現在、Rails/HerokuからFirebase/Riot.jsに絶賛リニューアル中です。\n\nしかしFirebaseにインフラが変わっても、このGCS方式の仕組み自体は続けています。\n\nいままでHTML出力は、Herokuのschedulerアドオンでバッチ処理していたのですが、CloudFunctionでFirestoreの更新をトリガーに動かすように変えたくらいですね。CloudFunction超便利。\n\n安定稼働してきたらFirebase版のやり方もまとめてみたいと思います。\n\n### 余談の余談\n\nHerokuからの移行を決めたのには色々理由があるのですが、Herokuがだめだからというわけではなく、作ってるサービスとの相性が大きいです。\n\nトーナメントだとデータ構造がほぼjsonで、フロントでうにょうにょ動かすのがメインになることを考えたときに、Heroku/Railsである必然性がなくてですね。。（気付くのが遅い）\n\n個人的にいまでもHerokuは大好きです。\n\n現状Herokuの無料プランでずっと動かせるのは1アプリだけなので、トーナメントの枠が空いたら、4年ぶりにHerokuで新しいアプリを動かせるのが楽しみだったりします。\n\nおしまい。\n\n##### （2018年4月1日追記）\n\nFirebaseへのお引っ越しが完了したので記事にまとめました。\n\n[blog.notsobad.jp](http://blog.notsobad.jp/entry/2018/03/31/132507)\n\nさようなら、Heroku。また会う日まで。。","date":1517731724000,"image":"https://storage.googleapis.com/blog-notsobad/images/20180204152944.png"}},"__N_SSG":true}